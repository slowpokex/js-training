{"version":3,"sources":["webpack:///./classes/loader.js","webpack:///./handlers/mainHandler.js","webpack:///./handlers/artistHandler.js","webpack:///./handlers/routing.js","webpack:///./classes/albumInfo.js","webpack:///./classes/albumsList.js","webpack:///./classes/artistInfo.js","webpack:///./classes/artistList.js","webpack:///./classes/searchArtist.js","webpack:///./handlers/searchHandler.js","webpack:///./handlers/albumHandler.js"],"names":[],"mappings":";;;;;;;;AAAA;AACA,mBAAkC;;AAElC;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;;;;;;;;;;;;;;;;;;AC/DA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;;;;;;;;;;;;;;;ACtGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,kGAAqC;AACrC;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH,C;;;;;;;AC3GA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA,uBAAuB,UAAU;AACjC;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AAAA;AAAA;;;;;;;;;;;AC9FA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;AChBA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,gF;;;;;;;;;;AChBA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;ACdA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;ACdA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;AChBA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;;AAEA;AACA,qD;;;;;;;;;;ACpEA;AACA;AACA;;AAEA;AACA;AACA;AACA,iDAAiD;AACjD;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,qBAAqB,gBAAgB;AACrC;AACA,iBAAiB,aAAa;AAC9B,mBAAmB,0BAA0B;AAC7C;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,4BAA4B,wBAAwB,KAAK,cAAc;AACvE;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH,C","file":"bundle.js","sourcesContent":["'use strict';\r\nexport default function Loader() { }\r\n\r\nconst PROTO = Loader.prototype;\r\n\r\n//Settings for Last.FM application\r\nPROTO.API_KEY = '9a5f1f19efe1727160e4dbb5e4367b9d';\r\nPROTO.SECRET_KEY = '92348e86733362627fd83e30dba8046e';\r\nPROTO.START_URL = 'http://ws.audioscrobbler.com/2.0/?';\r\nPROTO.FORMAT = 'json';\r\n\r\nPROTO.METHOD_KEY = 'method=';\r\nPROTO.ARTIST_KEY = '&artist=';\r\nPROTO.ALBUM_KEY = '&album=';\r\nPROTO.PAGE_KEY = '&page=';\r\nPROTO.LIMIT_KEY = '&limit=';\r\n\r\nPROTO.LINE_API_KEY = '&api_key=' + PROTO.API_KEY;\r\nPROTO.LINE_FORMAT = '&format=' + PROTO.FORMAT;\r\nPROTO.QUERY_POSTFIX = PROTO.LINE_API_KEY + PROTO.LINE_FORMAT;\r\n\r\nPROTO.generatePage = function (page) {\r\n  return PROTO.PAGE_KEY + (page || 1);\r\n};\r\n\r\nPROTO.generateLimit = function (page) {\r\n  return PROTO.LIMIT_KEY + (page || 50);\r\n};\r\n\r\nPROTO.returnMethodQuery = function (method) {\r\n  return Loader.prototype.METHOD_KEY + method;\r\n};\r\n\r\nPROTO.returnArtistParameter = function (value) {\r\n  return Loader.prototype.ARTIST_KEY + value;\r\n};\r\n\r\nPROTO.returnAlbumParameter = function (value) {\r\n  return Loader.prototype.ALBUM_KEY + value;\r\n};\r\n\r\nPROTO.inherits = function (child) {\r\n  child.prototype = Object.create(PROTO);\r\n  child.prototype.constructor = child;\r\n};\r\n\r\nPROTO.load = function (queryParams) {\r\n  return new Promise(function (resolve, reject) {\r\n    const xhr =  new XMLHttpRequest();\r\n    xhr.open('GET', queryParams, true);\r\n    xhr.setRequestHeader(\"Cache-Control\", 'no-cache');\r\n\r\n    xhr.send();\r\n\r\n    xhr.onreadystatechange = function() {\r\n      if (this.readyState !== 4) return;\r\n      if (this.status !== 200) {\r\n        reject(this);\r\n        return;\r\n      }\r\n      resolve(this);\r\n    };\r\n  });\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./classes/loader.js\n// module id = 0\n// module chunks = 0","'use strict';\r\nimport ArtistList from '../classes/artistList';\r\nimport * as artistHandler from '../handlers/artistHandler';\r\nimport route from '../handlers/routing';\r\n\r\nexport function getResultBox() {\r\n  return document.querySelector('.result-box');\r\n}\r\n\r\nexport function addItemImage(item, root, clazz) {\r\n  if (!item || !root) return;\r\n  const image = document.createElement('img');\r\n  image.src = item['image'][2]['#text'];\r\n  image.title = item.name;\r\n  image.className = clazz;\r\n\r\n  image.onerror = function () {\r\n    console.error('Error loading image ', this);\r\n    this.style.display = 'none';\r\n  };\r\n\r\n  root.appendChild(image);\r\n  return image;\r\n}\r\n\r\nfunction handleResponseOfTopArtists(response) {\r\n  if (!(response instanceof Object)) return;\r\n\r\n  const resultBox = getResultBox();\r\n  resultBox.innerHTML = '';\r\n  const elements = document.createDocumentFragment();\r\n\r\n  const artists = response['artists']['artist'];\r\n  const pageAttr = response['artists']['@attr'];\r\n  const currentPage = pageAttr['page'];\r\n  const totalPages = pageAttr['totalPages'];\r\n\r\n  artists.forEach(function (artist) {\r\n    let image = addItemImage(artist, elements, 'element');\r\n    if (image) {\r\n      image.onclick = function (event) {\r\n        artistHandler.loadArtistOnMainPage(event.currentTarget.title);\r\n        route.clearScrollBox();\r\n        route.addRouteChild('Back to top', () => loadTopArtistsOnPage(currentPage))\r\n      };\r\n    }\r\n  });\r\n\r\n  route._generatePagingScroll(currentPage, totalPages, loadTopArtistsOnPage);\r\n  resultBox.appendChild(elements);\r\n}\r\n\r\nexport function addHead(head) {\r\n  document.querySelector('.head').innerHTML = head;\r\n}\r\n\r\nexport function loadTopArtistsOnPage(number = 1) {\r\n  if (typeof (number) === 'object') {\r\n    number = 1;\r\n  }\r\n\r\n  clearLikeBox();\r\n  addHead('Top artists:');\r\n  addSpinner();\r\n\r\n  let loader = new ArtistList();\r\n  let response = loader.load(number);\r\n\r\n  response\r\n    .then(res => {\r\n      const responseObj = JSON.parse(res.responseText);\r\n      handleResponseOfTopArtists(responseObj)\r\n    });\r\n}\r\n\r\nexport function addSpinner() {\r\n  const resultBox = getResultBox();\r\n  resultBox.innerHTML = '';\r\n  const spinner = document.createElement('div');\r\n  spinner.classList.add('spinner');\r\n  resultBox.appendChild(spinner);\r\n}\r\n\r\nexport function addLikes(likes) {\r\n  const likeBox = document.querySelector('.stars');\r\n  likeBox.style.display = 'block';\r\n  likeBox.innerHTML = likes + ' likes';\r\n}\r\n\r\nexport function clearLikeBox() {\r\n  const likeBox = document.querySelector('.stars');\r\n  likeBox.style.display = 'none';\r\n  likeBox.innerHTML = '';\r\n}\r\n\r\nfunction addLabelBehavior() {\r\n  let label = document.getElementById('label');\r\n  label.addEventListener('click', loadTopArtistsOnPage);\r\n}\r\n\r\n\r\nwindow.onload = loadTopArtistsOnPage;\r\naddLabelBehavior();\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./handlers/mainHandler.js\n// module id = 1\n// module chunks = 0","'use strict';\r\nimport * as mainHandler from '../handlers/mainHandler';\r\nimport ArtistInfo from '../classes/artistInfo';\r\nimport AlbumsList from '../classes/albumsList';\r\nimport * as albumHandler from '../handlers/albumHandler';\r\nimport route from '../handlers/routing';\r\n\r\nfunction addInfo(artist, resultBox) {\r\n  const bio = artist['bio']['content'];\r\n  const text = document.createElement('div');\r\n  text.classList.add('info-box');\r\n  text.innerHTML = bio;\r\n  resultBox.appendChild(text);\r\n}\r\n\r\nfunction addAlbumsOnPage(response, resultBox) {\r\n\r\n  function addHeadOfAlbums(fragment) {\r\n    const albumHead = document.createElement('span');\r\n    if (!fragment) return;\r\n    albumHead.className = 'head';\r\n    albumHead.innerHTML = 'Top albums:';\r\n    fragment.appendChild(albumHead);\r\n  }\r\n\r\n  function addAlbumInPage(album, fragment) {\r\n    if (!album || !fragment) return;\r\n\r\n    const name = album['name'];\r\n    const imageSrc = album['image'][2]['#text'];\r\n    const img = document.createElement('img');\r\n\r\n    img.className = 'element';\r\n    img.src = imageSrc;\r\n    img.title = name;\r\n\r\n    img.onerror = function () {\r\n      console.error('Error loading image ', this);\r\n      this.style.display = 'none';\r\n    };\r\n    \r\n    fragment.appendChild(img);\r\n    return img;\r\n  }\r\n\r\n  const fragment  = document.createDocumentFragment();\r\n  addHeadOfAlbums(fragment);\r\n  const albums = response['topalbums']['album'];\r\n\r\n  if (!albums) return;\r\n\r\n  albums.forEach(function (album) {\r\n    const albumImage = addAlbumInPage(album, fragment);\r\n\r\n    albumImage.onclick = function () {\r\n      const artistName = album['artist']['name'];\r\n      const albumName = album['name'];\r\n      albumHandler.loadAlbumOnMainPage(albumName, artistName);\r\n      route.addRouteChild('Back to artist', () => {\r\n        loadArtistOnMainPage(artistName);\r\n        route.deleteLastRouteChild()});\r\n    };\r\n  });\r\n\r\n  resultBox.appendChild(fragment);\r\n}\r\n\r\nfunction addAlbums(artist, resultBox) {\r\n  if (!artist || !resultBox) return;\r\n\r\n  const artistName = artist['name'];\r\n  const albumInfo = new AlbumsList();\r\n  const result = albumInfo.load(artistName);\r\n\r\n  result.then(res => {\r\n    const responseObj = JSON.parse(res.responseText);\r\n    addAlbumsOnPage(responseObj, resultBox);\r\n  });\r\n}\r\n\r\nfunction addArtistToMainPage(response) {\r\n  if (!response) return;\r\n  const resultBox = mainHandler.getResultBox();\r\n  resultBox.innerHTML = '';\r\n\r\n  const artistBox = document.createElement('div');\r\n  artistBox.className = 'artist-box';\r\n  resultBox.appendChild(artistBox);\r\n\r\n  const artist = response['artist'];\r\n\r\n  mainHandler.addItemImage(artist, artistBox, 'artist');\r\n  mainHandler.addLikes(artist[\"stats\"][\"listeners\"]);\r\n  addInfo(artist, artistBox);\r\n  addAlbums(artist, resultBox);\r\n}\r\n\r\nexport function loadArtistOnMainPage(name) {\r\n  mainHandler.addHead(name);\r\n  mainHandler.addSpinner();\r\n  const artist = new ArtistInfo();\r\n  const result = artist.load(name);\r\n\r\n  result.then(res => {\r\n    const responseObj = JSON.parse(res.responseText);\r\n    addArtistToMainPage(responseObj)\r\n  });\r\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./handlers/artistHandler.js\n// module id = 2\n// module chunks = 0","'use strict';\r\nexport default class Route {\r\n  static showPagingScroll() {\r\n    const pageNumbers = document.querySelector('.result-scroll');\r\n    if (pageNumbers !== null && pageNumbers.style.display !== 'block') {\r\n      pageNumbers.style.display = 'block';\r\n    }\r\n  }\r\n\r\n  static generateRangeForPagination(currPage, maxPages) {\r\n    let arr = [];\r\n\r\n    currPage = Number.parseInt(currPage);\r\n    maxPages = Number.parseInt(maxPages);\r\n\r\n    const vault = 3;\r\n    let start, end;\r\n    if (currPage < vault + 1) {\r\n      start = 1;\r\n      end = (2 * vault) + 1;\r\n    } else if (currPage > maxPages - vault) {\r\n      start = maxPages - ((2 * vault) + 1);\r\n      end = maxPages;\r\n    } else {\r\n      start = currPage - vault;\r\n      end = currPage + vault;\r\n    }\r\n\r\n    for (let i = start; i <= end; i++) {\r\n      arr.push(i);\r\n    }\r\n\r\n    return arr;\r\n  }\r\n\r\n  static _generatePagingScroll(currentPage, totalPages, funcToUse) {\r\n    function addNumberOfScrollElement(elem, fragment) {\r\n      let div = document.createElement('div');\r\n      div.innerHTML = elem;\r\n      div.onclick = function () {\r\n        funcToUse(elem);\r\n      };\r\n      if (currentPage == elem) {\r\n        div.classList.add('current');\r\n      }\r\n      fragment.appendChild(div);\r\n    }\r\n\r\n    const range = Route.generateRangeForPagination(currentPage, totalPages);\r\n    const scrollBox = Route.getScrollBox();\r\n    Route.clearScrollBox();\r\n    Route._downSelectorWeight();\r\n\r\n    const fragment = document.createDocumentFragment();\r\n\r\n    range.forEach(function (elem) {\r\n      addNumberOfScrollElement(elem, fragment)\r\n    });\r\n\r\n    scrollBox.appendChild(fragment);\r\n  }\r\n\r\n  static addRouteChild(text, behavior) {\r\n    const scroll = Route.getScrollBox();\r\n    Route._upSelectorWeight();\r\n    const scrollChild = document.createElement('div');\r\n    scrollChild.className = 'back-child';\r\n    scrollChild.innerHTML = text;\r\n    scrollChild.onclick = behavior;\r\n    scroll.appendChild(scrollChild);\r\n    return scrollChild;\r\n  }\r\n\r\n  static _upSelectorWeight() {\r\n    Route.getScrollBox().id = 'scrollWithWeight';\r\n  }\r\n\r\n  static _downSelectorWeight() {\r\n    Route.getScrollBox().id = '';\r\n  }\r\n\r\n  static deleteLastRouteChild() {\r\n    const scroll = Route.getScrollBox();\r\n    scroll.removeChild(scroll.lastChild);\r\n  }\r\n\r\n  static clearScrollBox() {\r\n    const box = Route.getScrollBox();\r\n    if (box) box.innerHTML = '';\r\n  }\r\n\r\n  static getScrollBox() {\r\n    return document.querySelector('.result-scroll');\r\n  }\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./handlers/routing.js\n// module id = 3\n// module chunks = 0","'use strict';\r\nimport Loader from './loader';\r\n\r\nexport default function AlbumInfo() {\r\n\r\n  this.load = function (artist, album) {\r\n    const method = 'album.getinfo';\r\n    const methodQuery = this.__proto__.returnMethodQuery(method);\r\n    const artistQuery = this.__proto__.returnArtistParameter(artist);\r\n    const albumQuery = this.__proto__.returnAlbumParameter(album);\r\n    const fullQuery = this.__proto__.START_URL + methodQuery + artistQuery + albumQuery + this.QUERY_POSTFIX;\r\n    console.log(fullQuery);\r\n    return this.__proto__.load(fullQuery);\r\n  }\r\n}\r\n\r\nLoader.prototype.inherits(AlbumInfo);\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./classes/albumInfo.js\n// module id = 4\n// module chunks = 0","'use strict';\r\nimport Loader from './loader';\r\n\r\nexport default function AlbumsList() {\r\n  const method = 'artist.getTopAlbums';\r\n\r\n  this.load = function (artist) {\r\n    const methodQuery = this.__proto__.returnMethodQuery(method);\r\n    const artistQuery = this.__proto__.returnArtistParameter(artist);\r\n    const fullQuery = this.__proto__.START_URL + methodQuery + artistQuery +\r\n      this.__proto__.generateLimit(20) + this.__proto__.QUERY_POSTFIX;\r\n    console.log(fullQuery);\r\n    return this.__proto__.load(fullQuery);\r\n  };\r\n}\r\n\r\nLoader.prototype.inherits(AlbumsList);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./classes/albumsList.js\n// module id = 5\n// module chunks = 0","'use strict';\r\nimport Loader from './loader';\r\n\r\nexport default function ArtistInfo() {\r\n  this.load = function (artist) {\r\n    const method = 'artist.getinfo';\r\n    const methodQuery = this.__proto__.returnMethodQuery(method);\r\n    const artistQuery = this.__proto__.returnArtistParameter(artist);\r\n    const fullQuery = this.__proto__.START_URL + methodQuery + artistQuery + this.__proto__.QUERY_POSTFIX;\r\n    console.log(fullQuery);\r\n    return this.__proto__.load(fullQuery);\r\n  };\r\n}\r\n\r\nLoader.prototype.inherits(ArtistInfo);\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./classes/artistInfo.js\n// module id = 6\n// module chunks = 0","'use strict';\r\nimport Loader from './loader';\r\n\r\nexport default function ArtistList() {\r\n  const method = 'chart.gettopartists';\r\n\r\n  this.load = function (page) {\r\n    const fullQuery = this.START_URL + this.returnMethodQuery(method) +\r\n      this.generatePage(page) + this.generateLimit(50) + this.QUERY_POSTFIX;\r\n    console.log(fullQuery);\r\n    return this.__proto__.load(fullQuery);\r\n  };\r\n}\r\n\r\nLoader.prototype.inherits(ArtistList);\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./classes/artistList.js\n// module id = 7\n// module chunks = 0","'use strict';\r\nimport Loader from './loader';\r\n\r\nexport default function ArtistSearch() {\r\n  this.load = function (artist, page) {\r\n    page = page || 1;\r\n    const method = 'artist.search';\r\n    const methodQuery = this.__proto__.returnMethodQuery(method);\r\n    const artistQuery = this.__proto__.returnArtistParameter(artist);\r\n    const fullQuery = this.__proto__.START_URL + methodQuery + artistQuery +\r\n      this.__proto__.generatePage(page) + this.__proto__.QUERY_POSTFIX;\r\n    console.log(fullQuery);\r\n    return this.__proto__.load(fullQuery);\r\n  };\r\n}\r\n\r\nLoader.prototype.inherits(ArtistSearch);\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./classes/searchArtist.js\n// module id = 8\n// module chunks = 0","'use strict';\r\nimport * as mainHandler from '../handlers/mainHandler';\r\nimport * as artistHandler from '../handlers/artistHandler';\r\nimport ArtistSearch from '../classes/searchArtist';\r\nimport route from '../handlers/routing';\r\n\r\nfunction handleResponseOfSearchArtists(response) {\r\n  if (!(response instanceof Object)) return;\r\n\r\n  const resultBox = document.querySelector('.result-box');\r\n  const fragment = document.createDocumentFragment();\r\n  resultBox.innerHTML = '';\r\n\r\n  const artists = response[\"results\"][\"artistmatches\"][\"artist\"];\r\n  if (!artists) return;\r\n\r\n  artists.forEach(function (artist) {\r\n    const image = mainHandler.addItemImage(artist, fragment, 'element');\r\n    image.onclick = function (event) {\r\n      const artistName = artist['name'];\r\n      artistHandler.loadArtistOnMainPage(event.currentTarget.title);\r\n      route.addRouteChild('Back to search', () => {\r\n        getQueryLine().value = artistName;\r\n        searchArtist();\r\n        route.deleteLastRouteChild();\r\n      });\r\n    };\r\n  });\r\n\r\n  resultBox.appendChild(fragment);\r\n}\r\n\r\nfunction searchArtist(page) {\r\n  if (typeof (page) === 'object') {\r\n    page = 1;\r\n  }\r\n  page = page || 1;\r\n\r\n  const querySearch = getQueryLine();\r\n  const value = querySearch.value;\r\n\r\n\r\n  if ( !querySearch || (value === '')) return;\r\n\r\n  const loader = new ArtistSearch();\r\n  const response = loader.load(value, page);\r\n\r\n  route.clearScrollBox();\r\n  route.addRouteChild('Back to top', mainHandler.loadTopArtistsOnPage);\r\n\r\n  mainHandler.clearLikeBox();\r\n  mainHandler.addHead('Result of search: ' + value);\r\n  mainHandler.addSpinner();\r\n\r\n  response\r\n    .then(res =>{\r\n      const responseObj = JSON.parse(res.responseText);\r\n      handleResponseOfSearchArtists(responseObj);\r\n    });\r\n\r\n  querySearch.value = '';\r\n}\r\n\r\nfunction getQueryLine() {\r\n  return document.querySelector(\".search-box input[type='text']\");\r\n}\r\n\r\nlet searchButton = document.getElementById('startSearch');\r\nsearchButton.addEventListener('click', searchArtist);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./handlers/searchHandler.js\n// module id = 9\n// module chunks = 0","'use strict';\r\nimport * as mainHandler from '../handlers/mainHandler';\r\nimport AlbumInfo from '../classes/albumInfo';\r\n\r\nfunction getGenresFromAlbum(album) {\r\n  if (!album) return;\r\n  const tags = album['tags']['tag'];\r\n  return tags.map((elem) => elem['name']).join(';');\r\n}\r\n\r\nfunction addAlbumInfoToInfobox(album, albumBox) {\r\n  if (!album) return;\r\n  const textBox = document.createElement('div');\r\n  textBox.classList.add('info-box');\r\n\r\n  //language=HTML\r\n  textBox.innerHTML = `\r\n    <ul class=\"album-info\">\r\n      <li>Artist : ${album['artist']}</li>\r\n      <li>Year: 42(The meaning of life)</li>\r\n      <li>Url: ${album['url']}</li>\r\n      <li>Genre: ${getGenresFromAlbum(album)}</li>\r\n    </ul>`;\r\n\r\n  albumBox.appendChild(textBox);\r\n}\r\n\r\nfunction addTracksOnPage(album, resultBox) {\r\n  if (!album || !resultBox) return;\r\n\r\n  function addHeadOfTracks(fragment) {\r\n    if (!fragment) return;\r\n    const albumHead = document.createElement('span');\r\n    albumHead.className = 'head';\r\n    albumHead.innerHTML = 'Tracks:';\r\n    fragment.appendChild(albumHead);\r\n  }\r\n\r\n  function addTrackOnPage(track, fragment) {\r\n    if (!track || !fragment) return;\r\n    const trackBox = document.createElement('a');\r\n    trackBox.className = 'track';\r\n    trackBox.href = track['url'];\r\n    trackBox.innerHTML = `${track['artist']['name']} - ${track['name']}`;\r\n    fragment.appendChild(trackBox);\r\n  }\r\n\r\n  const fragment  = document.createDocumentFragment();\r\n  addHeadOfTracks(fragment);\r\n\r\n  const tracks = album['tracks']['track'];\r\n\r\n  tracks.forEach((track) => {\r\n    addTrackOnPage(track, fragment)\r\n  });\r\n\r\n  resultBox.appendChild(fragment);\r\n}\r\n\r\nfunction addAlbumOnMainPage(response) {\r\n  if (!response) return;\r\n  const resultBox = mainHandler.getResultBox();\r\n  resultBox.innerHTML = '';\r\n\r\n  const album = response['album'];\r\n  mainHandler.addLikes(album['listeners']);\r\n\r\n  const albumBox = document.createElement('div');\r\n  albumBox.className = 'artist-box';\r\n  resultBox.appendChild(albumBox);\r\n  mainHandler.addItemImage(album, albumBox, 'artist');\r\n  addAlbumInfoToInfobox(album, albumBox);\r\n\r\n  addTracksOnPage(album, resultBox);\r\n}\r\n\r\nexport function loadAlbumOnMainPage(album, artist) {\r\n  mainHandler.addHead(album);\r\n  mainHandler.addSpinner();\r\n\r\n  const albumLoader = new AlbumInfo();\r\n  const albumInfo = albumLoader.load(artist, album);\r\n\r\n  albumInfo.then((res) => {\r\n    const responseObj = JSON.parse(res.responseText);\r\n    addAlbumOnMainPage(responseObj);\r\n  });\r\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./handlers/albumHandler.js\n// module id = 10\n// module chunks = 0"],"sourceRoot":""}